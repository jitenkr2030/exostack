apiVersion: apps/v1
kind: Deployment
metadata:
  name: exostack-hub
  namespace: exostack
  labels:
    app: exostack-hub
    component: hub
spec:
  replicas: 2
  selector:
    matchLabels:
      app: exostack-hub
  template:
    metadata:
      labels:
        app: exostack-hub
    spec:
      containers:
      - name: exostack-hub
        image: exostack/hub:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: exostack-config
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: exostack-secrets
              key: secret-key
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: models
          mountPath: /app/models
        livenessProbe:
          httpGet:
            path: /status/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: logs
        emptyDir: {}
      - name: models
        persistentVolumeClaim:
          claimName: models-pvc
      initContainers:
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z redis-service 6379; do echo waiting for redis; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: exostack-hub-service
  namespace: exostack
  labels:
    app: exostack-hub
spec:
  type: LoadBalancer
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: exostack-hub
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: exostack
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
